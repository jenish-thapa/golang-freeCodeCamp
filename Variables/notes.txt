BASIC TYPES

bool 

string 

int int8 int16 int32 int64
uint uint8 uint16 uint32 uint64 uintptr

byte // alias for uint8

rune // alias for int32
     // represents a Unicode code point

float32 float64

complex64 complex128
----------------------------------------------------------------------

SHORT VAR DECLARATION

i := 42             // int
f := 3.14           // float64
g := 0.867 + 0.5i   // complex128
----------------------------------------------------------------------

GET TYPE OF VARIABLES

use %T inside Printf method
----------------------------------------------------------------------

MULTIPLE VARIABLE ASSIGNMENT

a , b := 1, "hello"
----------------------------------------------------------------------

CONSTANTS

// cannot use short var declaration
const PI = 3.14
----------------------------------------------------------------------

COMPUTED CONSTANTS

// values should be known during the compile time
const fName = "Jenish"
const lName = "Thapa"
const fullName = fName + " " + lName
----------------------------------------------------------------------

FORMATING STRINGS

fmt.Printf - Prints a formatted string to standard out
fmt.Sprintf - returns a formatted string

%v - default
%s - string
%d - decimal
%f - float      // can be used as %.2f to round off numbers
----------------------------------------------------------------------

CONDITIONALS

if 1 > 2 {
    fmt.Println("1 is greater than 2")
} else {
    fmt.Println("1 is smaller than 2")
}
----------------------------------------------------------------------

INITIAL STATEMENT IN IF BLOCK

if length := 2; length == 2 {
    fmt.Println("Length is equal to 2")
}

pros: saves an extra line of code
      doesn't pollute the parent scope